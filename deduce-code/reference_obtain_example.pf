import Nat
import List
import Set
import MultiSet
import Maps

theorem obtain_example: all n:Nat. 
  if (some x:Nat. n = 4 * x) then (some x:Nat. n = 2 * x)
proof
  arbitrary n:Nat
  assume prem: (some x:Nat. n = 4 * x)
  obtain x where m4: n = 4 * x from prem
  choose 2 * x
  equations
     n = 4 * x          by m4
   ... = #2 * 2# * x    by definition {operator*,operator*,operator*,
                                       operator+,operator+,operator+}
   ... = 2 * (2 * x)    by mult_assoc
end