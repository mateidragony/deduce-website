import Nat
import List
import Set
import MultiSet
import Maps

theorem injective_example: all x:Nat, y:Nat, z:Nat.
  if suc(x) = suc(y) and suc(y) = suc(z) then x = z
proof
  arbitrary x:Nat, y:Nat, z:Nat
  suppose prem: suc(x) = suc(y) and suc(y) = suc(z)
  have: x = y by injective suc prem
  have: y = z by injective suc prem
  transitive (recall x = y) (recall y = z)
end