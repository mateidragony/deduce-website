const codeBlocks = [
  "home_example1",
  "home_example2",
  "home_example3",
  "reference_add_example",
  "reference_add_multiset_example",
  "reference_all_example_bool",
  "reference_all_example_intro",
  "reference_all_example_elim",
  "reference_and_example",
  "reference_and_example_intro",
  "reference_and_example_elim",
  "reference_append_example",
  "reference_apply_to_example",
  "reference_arbitrary_example",
  "reference_assert_example",
  "reference_assume_example",
  "reference_call_example",
  "reference_choose_example",
  "reference_compose_example",
  "reference_conclude_example",
  "reference_conjunct_example",
  "reference_define_example",
  "reference_define_term_example",
  "reference_define_proof_example",
  "reference_definition_example",
  "reference_definition_in_example",
  "reference_division_example",
  "reference_equations_example",
  "reference_extensionality_example",
  "reference_function_term_example",
  "reference_print_area",
  "reference_function_example",
  "reference_generic_example",
  "reference_greater_example",
  "reference_greater_equal_example",
  "reference_if_then_else_example",
  "reference_membership_example",
  "reference_induction_example",
  "reference_injective_example",
  "reference_instantiate_proof_example",
  "reference_instantiate_example",
  "reference_intersect_example",
  "reference_less_than_example",
  "reference_less_equal_example",
  "reference_list_example",
  "reference_mark_example",
  "reference_mod_example",
  "reference_multiply_example",
  "reference_obtain_example",
  "reference_or_example",
  "reference_or_example_intro1",
  "reference_or_example_intro2",
  "reference_print_example",
  "reference_rewrite_example",
  "reference_rewrite_in_example",
  "reference_switch_example",
  "reference_switch_proof_example",
  "reference_subset_example",
  "reference_subtract_example",
  "reference_suffices_example",
  "reference_true_example",
  "reference_union_example",
  "reference_set_union_example",
  "reference_trichotomy_example",
  "programming_ImportNat",
  "programming_five_six",
  "programming_print_five",
  "programming_area",
  "programming_print_area",
  "programming_bad_area",
  "programming_NatList",
  "programming_NL12",
  "programming_List",
  "programming_L12",
  "programming_front",
  "programming_print_front",
  "programming_broken_front",
  "programming_Nat",
  "programming_print7",
  "programming_assert_if_true",
  "programming_lenNatList",
  "programming_app",
  "programming_zip_example",
  "programming_length",
  "programming_head",
  "programming_apply_length",
  "programming_apply_length_empty",
  "programming_all_elements",
  "programming_Pair",
  "programming_test_sum",
  "programming_test_dot",
  "programming_test_last",
  "programming_test_remove_if",
  "proof_length_nat_empty",
  "proof_length_node42",
  "proof_append_node_1_node_2",
  "proof_length_nat_one",
  "proof_length_node42_again",
  "proof_list_length_one",
  "proof_append_node_x_node_y",
  "proof_list_length_one_equal",
  "proof_x_0_x_eq_2_x",
  "proof_xyz_zyx",
  "proof_xyz_zyx_eqn",
  "proof_list_append_empty",
  "proof_length_append",
  "proof_pos_1_and_2",
  "proof_pos_2",
  "proof_intro_dichotomy",
  "proof_intro_zero_or_positive",
  "proof_alt_max",
  "proof_less_alt_max",
  "proof_list_length_zero_empty",
  "proof_length_append_zero_empty",
  "proof_really_trivial",
  "proof_contra_false",
  "proof_false_any",
  "proof_intro_less_irreflexive",
  "proof_intro_less_not_equal",
  "proof_equal_less_trans",
  "proof_intro_addition_of_evens",
]